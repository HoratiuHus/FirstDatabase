@using Models.Response
@using Models.Request
@model IEnumerable<TopicResponse>
@{
    ViewData["Title"] = "Topic Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <h1 class="display-4">Topics</h1>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TopicName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpVotes)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DownVotes)
                </th>
            </tr>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Id</td>
                    <td><input type="button" value="@item.TopicName" onclick="location.href='@Url.Action("Index", "Home", new {topicId = item.Id})'" /></td>
                    <td><input type="button" value="UpVotes :@item.UpVotes" onclick="location.href='@Url.Action("UpdateTopicVotes", "Topic", new TopicUpdateRequest { Id = item.Id, UpVotes=item.UpVotes + 1, DownVotes= item.DownVotes})'" /></td>
                    <td><input type="button" value="DownVotes :@item.DownVotes" onclick="location.href='@Url.Action("UpdateTopicVotes", "Topic", new TopicUpdateRequest { Id = item.Id, UpVotes=item.UpVotes, DownVotes= item.DownVotes + 1})'" /></td>
                </tr>
            }
        </table>
</div>
